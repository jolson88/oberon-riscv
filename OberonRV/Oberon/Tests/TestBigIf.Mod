MODULE TestBigIf;
  IMPORT SYSTEM;

  PROCEDURE Test*;
    VAR a, b, c, d: INTEGER;
  BEGIN
    SYSTEM.PUT(-60, 0F0EH);
    a := 1;
    b := 2;
    c := 3;
    d := 4;
    (* boilerplate to make big if body, content doesnt really matter *)
    IF a # 0 THEN
      SYSTEM.PUT(-60, 0E0FH);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      a := (a + 5) * (b - 2) * c * (d + 5);
      SYSTEM.PUT(-60, 0E0EH);
    END;

    IF a = 0 THEN
      SYSTEM.PUT(-60, 0E0E0FH);
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      a := (a + 5) * (b - 2) * c * d + 5;
      SYSTEM.PUT(-60, 0E0E0EH);
    END;
    SYSTEM.PUT(-60, 0AEAH);
  END Test;

END TestBigIf.
